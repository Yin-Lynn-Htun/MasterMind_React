{"version":3,"sources":["components/AnswerHolders/AnswerHolders.module.css","components/Holder/holder.module.css","components/AnswerHolders/AnswerHolder/holder.module.css","container/holders/holders.module.css","components/UI/Button.module.css","container/Layout.module.css","components/Holder/holder.js","container/holders/holders.js","components/Model/Model.js","components/AnswerHolders/AnswerHolder/AnswerHolder.js","components/HintHolders/HintHolder/HintHolder.js","components/HintHolders/HintHolders.js","components/AnswerHolders/AnswerHolders.js","container/layout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Holder","props","onClick","selectNumber","bind","text","className","classes","holder","sNumber","active","style","backgroundColor","Holders","holders","numbers","map","number","index","selectedNumber","id","onClickInputNumber","model","href","link","target","rel","clicked","buttonText","AnswerHolder","attachedClass","rowId","show","push","disable","join","num","HintHolder","attachClass","type","HintHolders","checkNumber","React","memo","prevProps","nextProps","AnswerHolders","onClickAnswerNumber","eleToShow","checkBtn","onCheckAnswer","_","isEqual","box","buttonClass","dontShow","display","gridColumn","Layout","useState","setSelectedNumber","1","2","3","4","5","6","7","8","9","10","answerNumber","setAnswerNumber","setCheckNumber","showModel","setShowModel","counter","setCounter","answer","selectedRow","slice","splice","includes","correctAnswer","forEach","length","count","tempAnswer","countBy","tempCorrect","key","Math","min","l1","i","l","check","onClickPlayAgain","window","location","reload","answerHolders","position","title","App","Array","from","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,+BAA+B,SAAW,gCAAgC,IAAM,6B,mBCA5GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,aAAe,+B,gBCAjGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,QAAU,0B,kBCAxGD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,IAAM,sB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,wB,4OCeXC,EAbA,SAACC,GACZ,OACI,qBACIC,QAASD,EAAME,aAAaC,K,UAAWH,EAAMI,MAC7CC,UAAS,UAAKC,IAAQC,OAAb,YACLP,EAAMQ,UAAYR,EAAMI,MAAQE,IAAQG,QAE5CC,MAAO,CAAEC,gBAAgB,cAAD,OAAgBX,EAAMI,KAAtB,MAL5B,SAMKJ,EAAMI,Q,iBCeJQ,EAtBC,SAACZ,GAET,IAAMa,EAAUb,EAAMc,QAAQC,KAAI,SAACC,EAAQC,GACvC,OACI,cAAC,EAAD,CACIT,QAASR,EAAMkB,eAEfd,KAAMY,EACNG,GAAIF,EACJf,aAAcF,EAAMoB,oBAHfH,MAQjB,OACI,8BACI,yBAASZ,UAAWC,IAAQO,QAA5B,SAAsCA,OCEvCQ,G,MAnBD,SAACrB,GACX,OACI,qBAAKK,UAAW,YAAhB,SACI,sBAAKA,UAAW,QAAhB,UACI,4BAAIL,EAAMI,OACV,6CACiB,IACb,mBAAGkB,KAAMtB,EAAMuB,KAAMC,OAAO,SAASC,IAAI,aAAzC,0BAIJ,wBAAQpB,UAAW,MAAOJ,QAASD,EAAM0B,QAAzC,SACK1B,EAAM2B,oB,gBCOZC,EAnBM,SAAC5B,GAClB,IAAM6B,EAAgB,CAACvB,IAAQC,QAC3BmB,EAAU,kBAAM1B,EAAME,aAAaF,EAAMmB,GAAInB,EAAM8B,QAOvD,OALK9B,EAAM+B,OACPF,EAAcG,KAAK1B,IAAQ2B,SAC3BP,EAAU,cAIV,qBACIzB,QAASyB,EACTrB,UAAWwB,EAAcK,KAAK,KAC9BxB,MAAO,CAAEC,gBAAgB,cAAD,OAAgBX,EAAMmC,IAAtB,MAH5B,SAIKnC,EAAMmC,O,gBCRJC,G,MANI,SAACpC,GAChB,IAAMqC,EAAc,CAAC,SAAUrC,EAAMsC,KAAjB,iBAAiCtC,EAAMmB,KAE3D,OAAO,qBAAKd,UAAWgC,EAAYH,KAAK,SCFtCK,G,MAAc,SAACvC,GACjB,OACI,qBAAKK,UAAW,aAAhB,SACKL,EAAMwC,YAAYzB,KAAI,SAACuB,EAAMrB,GAC1B,OAAO,cAAC,EAAD,CAAwBE,GAAIF,EAAOqB,KAAMA,GAAxBrB,UAMzBwB,MAAMC,KAAKH,GAAa,SAACI,EAAWC,GAC/C,OAAOD,EAAUH,cAAgBI,EAAUJ,eCTzCK,EAAgB,SAAC7C,GACnB,IAAMa,EAAUb,EAAMc,QAAQC,KAAI,SAACC,EAAQC,GACvC,OACI,cAAC,EAAD,CACIc,KAAM/B,EAAM+B,KAEZI,IAAKnB,EACLG,GAAIF,EACJa,MAAO9B,EAAMmB,GACbjB,aAAcF,EAAM8C,qBAJf7B,MASb8B,EAAY,cAAC,EAAD,CAAaP,YAAaxC,EAAMwC,cAE5CxC,EAAM+B,KACNgB,EACI,wBAAQ1C,UAAWC,IAAQ0C,SAAU/C,QAASD,EAAMiD,cAApD,mBAKJC,IAAEC,QAAQnD,EAAMwC,YAAa,CACzB,WACA,WACA,WACA,eAGJO,EAAY,qBAAK1C,UAAWC,IAAQ8C,OAGxC,IAAIC,EAAc,CAAC/C,IAAQ0C,UAM3B,OAJKhD,EAAM+B,MACPsB,EAAYrB,KAAK1B,IAAQgD,UAIzB,mCACI,0BAASjD,UAAWC,IAAQO,QAA5B,UACI,qBAAKH,MAAO,CAAE6C,QAAS,OAAQC,WAAY,cAA3C,SACK3C,IAEJkC,QAMFN,MAAMC,KAAKG,GAAe,SAACF,EAAWC,GACjD,OAAQA,EAAUb,MAAQa,EAAUJ,cAAgBG,EAAUH,e,yBCuHnDiB,EAzKA,SAACzD,GAAW,IAAD,EACsB0D,mBAAS,GAD/B,mBACfxC,EADe,KACCyC,EADD,OAEkBD,mBAAS,CAC7CE,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,EAAG,CAAC,GAAI,GAAI,GAAI,IAChBC,GAAI,CAAC,GAAI,GAAI,GAAI,MAZC,mBAEfC,EAFe,KAEDC,EAFC,OAcgBb,mBAAS,CAC3CE,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,EAAG,CAAC,WAAY,WAAY,WAAY,YACxCC,GAAI,CAAC,WAAY,WAAY,WAAY,cAxBvB,mBAcf7B,EAde,KAcFgC,EAdE,OA0BYd,mBAAS,IA1BrB,mBA0Bfe,EA1Be,KA0BJC,EA1BI,OA2BQhB,mBAAS,GA3BjB,mBA2BfiB,EA3Be,KA2BNC,EA3BM,KAiChB9B,EAAsB,SAAC7B,EAAOa,GAChC,GAAuB,IAAnBZ,EAAJ,CAKA,IAAM2D,EAAM,eAAQP,GACdQ,EAAcD,EAAO/C,GAAOiD,QAClCD,EAAYE,OAAO/D,EAAO,EAAGC,GAC7B2D,EAAO/C,GAASgD,EAChBP,EAAgBM,QARZH,EAAa,UAWfzB,EAAgB,WAClB,GAAIqB,EAAaK,GAASM,SAAS,IAC/BP,EAAa,eADjB,CAIA,IAAMG,EAAS,GACf7E,EAAMkF,cAAcC,SAAQ,SAAChD,EAAKlB,GAC1BkB,IAAQmC,EAAaK,GAAS1D,IAC9B4D,EAAO7C,KAAK,YAIE,IAAlB6C,EAAOO,OACPV,EAAa,OACM,KAAZC,GACPD,EAAa,QAGjB,IAAIW,EAAQ,EACNC,EAAapC,IAAEqC,QAAQjB,EAAaK,IACpCa,EAActC,IAAEqC,QAAQvF,EAAMkF,eACpC,IAAK,IAAIO,KAAOD,EACZH,GAASK,KAAKC,IAAIL,EAAWG,GAAMD,EAAYC,IACzCC,KAAKC,IAAIL,EAAWG,GAAMD,EAAYC,IACtC,EAIV,IADA,IAAMG,EAAKf,EAAOO,OACTS,EAAI,EAAGA,EAAIR,EAAQO,EAAIC,IAC5BhB,EAAO7C,KAAK,WAIhB,IADA,IAAM8D,EAAIjB,EAAOO,OACRS,EAAI,EAAGA,EAAI,EAAIC,EAAGD,IACvBhB,EAAO7C,KAAK,eAGhB,IAAM+D,EAAK,eAAQvD,GACnBuD,EAAMpB,GAAN,UAAqBE,GACrBL,EAAeuB,GACfnB,EAAWD,EAAU,KAGnBqB,EAAmB,WACrBtB,GAAa,GACbuB,OAAOC,SAASC,QAAO,IAOrBC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIrF,KAAI,SAACI,GACvD,OACI,cAAC,EAAD,CAEIA,GAAIA,EACJL,QAASwD,EAAanD,GACtB2B,oBAAqBA,EACrBG,cAAeA,EACfT,YAAaA,EAAYrB,GACzBY,KAAM4C,IAAYxD,GANbA,MAWjB,OACI,sBAAKT,MAAO,CAAE2F,SAAU,YAAxB,UACI,oBAAIhG,UAAWC,IAAQgG,MAAvB,yBAIA,cAAC,EAAD,CACIxF,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBM,mBA3Fe,SAACe,GACxBwB,EAAkBxB,IA2FV0C,QAAQ,EACR3D,eAAgBA,IAGnBkF,EAEc,KAAd3B,EACiB,QAAdA,EACI,cAAC,EAAD,CACIrE,KAAM,UACNuB,WAAY,cACZD,QAASsE,IAEC,SAAdvB,EACA,cAAC,EAAD,CACIrE,KAAM,WACNuB,WAAY,cACZD,QAASsE,IAEC,UAAdvB,EACA,cAAC,EAAD,CACIrE,KAAM,0BACNuB,WAAY,MACZD,QAAS,kBAAMgD,EAAa,OAElB,YAAdD,EACA,cAAC,EAAD,CACIrE,KAAM,2BACNuB,WAAY,MACZD,QAAS,kBAAMgD,EAAa,OAElB,cAAdD,EACA,cAAC,EAAD,CACIrE,KACI,mWAEJmB,KACI,wDAEJI,WAAY,MACZD,QAAS,kBAAMgD,EAAa,OAEhC,KACJ,SC7JD6B,MAZf,WACI,IAAMrB,EAAgBsB,MAAMC,KACxB,CAAErB,OAAQ,IACV,kBAAMM,KAAKgB,MAAsB,EAAhBhB,KAAKiB,UAAgB,KAE1C,OACI,qBAAKtG,UAAU,MAAf,SACI,cAAC,EAAD,CAAQ6E,cAAeA,OCEpB0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2b5a5155.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"holders\":\"AnswerHolders_holders__2UEX2\",\"checkBtn\":\"AnswerHolders_checkBtn__1d0Lq\",\"box\":\"AnswerHolders_box__xVVT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"holder\":\"holder_holder__2UjTi\",\"active\":\"holder_active__Jz6z1\",\"activeHolder\":\"holder_activeHolder__6plbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"holder\":\"holder_holder__2dYwF\",\"activeHolder\":\"holder_activeHolder__CQ5-R\",\"disable\":\"holder_disable__l70tO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"holders\":\"holders_holders__1iXN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3B3VU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Layout_title__3_VPK\"};","import React from 'react'\r\nimport classes from './holder.module.css'\r\n\r\nconst Holder = (props) => {\r\n    return (\r\n        <div\r\n            onClick={props.selectNumber.bind(this, props.text)}\r\n            className={`${classes.holder} ${\r\n                props.sNumber === props.text && classes.active\r\n            }`}\r\n            style={{ backgroundColor: `var(--color${props.text})` }}>\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Holder\r\n","import React from 'react';\r\nimport Holder from '../../components/Holder/holder';\r\nimport classes from './holders.module.css';\r\n\r\nconst Holders = (props) => {\r\n\r\n        const holders = props.numbers.map((number, index) => {\r\n            return (\r\n                <Holder\r\n                    sNumber={props.selectedNumber}\r\n                    key={index}\r\n                    text={number}\r\n                    id={index}\r\n                    selectNumber={props.onClickInputNumber}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <section className={classes.holders}>{holders}</section>\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default Holders;\r\n","import React from 'react'\r\nimport './Model.css'\r\n\r\nconst model = (props) => {\r\n    return (\r\n        <div className={'container'}>\r\n            <div className={'model'}>\r\n                <p>{props.text}</p>\r\n                <p>\r\n                    More info on{' '}\r\n                    <a href={props.link} target=\"_blank\" rel=\"noreferrer\">\r\n                        Wikipedia\r\n                    </a>\r\n                </p>\r\n                <button className={'btn'} onClick={props.clicked}>\r\n                    {props.buttonText}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default model\r\n","import React from 'react'\r\nimport classes from './holder.module.css'\r\n\r\nconst AnswerHolder = (props) => {\r\n    const attachedClass = [classes.holder]\r\n    let clicked = () => props.selectNumber(props.id, props.rowId)\r\n\r\n    if (!props.show) {\r\n        attachedClass.push(classes.disable)\r\n        clicked = () => {}\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={clicked}\r\n            className={attachedClass.join(' ')}\r\n            style={{ backgroundColor: `var(--color${props.num})` }}>\r\n            {props.num}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswerHolder\r\n","import React from 'react'\r\nimport './HintHolder.css'\r\n\r\nconst HintHolder = (props) => {\r\n    const attachClass = ['holder', props.type, `postion${props.id}`]\r\n\r\n    return <div className={attachClass.join(' ')}></div>\r\n}\r\n\r\nexport default HintHolder\r\n","import React from 'react'\r\nimport HintHolder from './HintHolder/HintHolder'\r\nimport './HintHolders.css'\r\n\r\nconst HintHolders = (props) => {\r\n    return (\r\n        <div className={'hintHolder'}>\r\n            {props.checkNumber.map((type, index) => {\r\n                return <HintHolder key={index} id={index} type={type} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(HintHolders, (prevProps, nextProps) => {\r\n    return prevProps.checkNumber === nextProps.checkNumber\r\n})\r\n","import React from 'react'\r\nimport AnswerHolder from './AnswerHolder/AnswerHolder'\r\nimport classes from './AnswerHolders.module.css'\r\nimport HintHolders from '../HintHolders/HintHolders'\r\nimport _ from 'lodash'\r\n\r\nconst AnswerHolders = (props) => {\r\n    const holders = props.numbers.map((number, index) => {\r\n        return (\r\n            <AnswerHolder\r\n                show={props.show}\r\n                key={index}\r\n                num={number}\r\n                id={index}\r\n                rowId={props.id}\r\n                selectNumber={props.onClickAnswerNumber}\r\n            />\r\n        )\r\n    })\r\n\r\n    let eleToShow = <HintHolders checkNumber={props.checkNumber} />\r\n\r\n    if (props.show) {\r\n        eleToShow = (\r\n            <button className={classes.checkBtn} onClick={props.onCheckAnswer}>\r\n                CHECK\r\n            </button>\r\n        )\r\n    } else if (\r\n        _.isEqual(props.checkNumber, [\r\n            'dontShow',\r\n            'dontShow',\r\n            'dontShow',\r\n            'dontShow',\r\n        ])\r\n    ) {\r\n        eleToShow = <div className={classes.box}></div>\r\n    }\r\n\r\n    let buttonClass = [classes.checkBtn]\r\n\r\n    if (!props.show) {\r\n        buttonClass.push(classes.dontShow)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={classes.holders}>\r\n                <div style={{ display: 'flex', gridColumn: '2 / span 1' }}>\r\n                    {holders}\r\n                </div>\r\n                {eleToShow}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AnswerHolders, (prevProps, nextProps) => {\r\n    return !nextProps.show && nextProps.checkNumber === prevProps.checkNumber\r\n})\r\n","import _ from 'lodash'\r\nimport React, { useState } from 'react'\r\nimport Holders from './holders/holders'\r\nimport Model from '../components/Model/Model'\r\nimport AnswerHolders from '../components/AnswerHolders/AnswerHolders'\r\nimport Button from '../components/UI/Button'\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    const [selectedNumber, setSelectedNumber] = useState(0)\r\n    const [answerNumber, setAnswerNumber] = useState({\r\n        1: ['', '', '', ''],\r\n        2: ['', '', '', ''],\r\n        3: ['', '', '', ''],\r\n        4: ['', '', '', ''],\r\n        5: ['', '', '', ''],\r\n        6: ['', '', '', ''],\r\n        7: ['', '', '', ''],\r\n        8: ['', '', '', ''],\r\n        9: ['', '', '', ''],\r\n        10: ['', '', '', ''],\r\n    })\r\n    const [checkNumber, setCheckNumber] = useState({\r\n        1: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        2: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        3: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        4: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        5: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        6: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        7: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        8: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        9: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n        10: ['dontShow', 'dontShow', 'dontShow', 'dontShow'],\r\n    })\r\n    const [showModel, setShowModel] = useState('')\r\n    const [counter, setCounter] = useState(1)\r\n\r\n    const onClickInputNumber = (num) => {\r\n        setSelectedNumber(num)\r\n    }\r\n\r\n    const onClickAnswerNumber = (index, rowId) => {\r\n        if (selectedNumber === 0) {\r\n            setShowModel('error')\r\n            return\r\n        }\r\n\r\n        const answer = { ...answerNumber }\r\n        const selectedRow = answer[rowId].slice()\r\n        selectedRow.splice(index, 1, selectedNumber)\r\n        answer[rowId] = selectedRow\r\n        setAnswerNumber(answer)\r\n    }\r\n\r\n    const onCheckAnswer = () => {\r\n        if (answerNumber[counter].includes('')) {\r\n            setShowModel('fillAll')\r\n            return\r\n        }\r\n        const answer = []\r\n        props.correctAnswer.forEach((num, index) => {\r\n            if (num === answerNumber[counter][index]) {\r\n                answer.push('exact')\r\n            }\r\n        })\r\n\r\n        if (answer.length === 4) {\r\n            setShowModel('won')\r\n        } else if (counter === 10) {\r\n            setShowModel('lose')\r\n        }\r\n\r\n        let count = 0\r\n        const tempAnswer = _.countBy(answerNumber[counter])\r\n        const tempCorrect = _.countBy(props.correctAnswer)\r\n        for (let key in tempCorrect) {\r\n            count += Math.min(tempAnswer[key], tempCorrect[key])\r\n                ? Math.min(tempAnswer[key], tempCorrect[key])\r\n                : 0\r\n        }\r\n\r\n        const l1 = answer.length\r\n        for (let i = 0; i < count - l1; i++) {\r\n            answer.push('contain')\r\n        }\r\n\r\n        const l = answer.length\r\n        for (let i = 0; i < 4 - l; i++) {\r\n            answer.push('not-contain')\r\n        }\r\n\r\n        const check = { ...checkNumber }\r\n        check[counter] = [...answer]\r\n        setCheckNumber(check)\r\n        setCounter(counter + 1)\r\n    }\r\n\r\n    const onClickPlayAgain = () => {\r\n        setShowModel(false)\r\n        window.location.reload(false)\r\n    }\r\n\r\n    const onClickShowRuleHandler = () => {\r\n        setShowModel('showRules')\r\n    }\r\n\r\n    const answerHolders = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((id) => {\r\n        return (\r\n            <AnswerHolders\r\n                key={id}\r\n                id={id}\r\n                numbers={answerNumber[id]}\r\n                onClickAnswerNumber={onClickAnswerNumber}\r\n                onCheckAnswer={onCheckAnswer}\r\n                checkNumber={checkNumber[id]}\r\n                show={counter === id}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <h1 className={classes.title}>Master Mind</h1>\r\n            {/* <Button text=\"Show Rules\" clicked={onClickShowRuleHandler} /> */}\r\n            {/* <h3>Current Selected Number : {selectedNumber}</h3> */}\r\n\r\n            <Holders\r\n                numbers={[1, 2, 3, 4, 5, 6]}\r\n                onClickInputNumber={onClickInputNumber}\r\n                answer={false}\r\n                selectedNumber={selectedNumber}\r\n            />\r\n\r\n            {answerHolders}\r\n\r\n            {showModel !== '' ? (\r\n                showModel === 'won' ? (\r\n                    <Model\r\n                        text={'You won'}\r\n                        buttonText={'Play again!'}\r\n                        clicked={onClickPlayAgain}\r\n                    />\r\n                ) : showModel === 'lose' ? (\r\n                    <Model\r\n                        text={'You lose'}\r\n                        buttonText={'Play again!'}\r\n                        clicked={onClickPlayAgain}\r\n                    />\r\n                ) : showModel === 'error' ? (\r\n                    <Model\r\n                        text={'Please select a number '}\r\n                        buttonText={'OK!'}\r\n                        clicked={() => setShowModel('')}\r\n                    />\r\n                ) : showModel === 'fillAll' ? (\r\n                    <Model\r\n                        text={'Please fill all numbers '}\r\n                        buttonText={'OK!'}\r\n                        clicked={() => setShowModel('')}\r\n                    />\r\n                ) : showModel === 'showRules' ? (\r\n                    <Model\r\n                        text={\r\n                            'Try to guess the pattern, in both order and numbers, within ten turns. After submitting a row, a small black peg is placed for each code peg from the guess which is correct in both number and position. A white peg indicates the existence of a correct number peg placed in the wrong position. A red peg indicates a incorrect number is placed in the pegs'\r\n                        }\r\n                        link={\r\n                            'https://en.wikipedia.org/wiki/Mastermind_(board_game)'\r\n                        }\r\n                        buttonText={'OK!'}\r\n                        clicked={() => setShowModel('')}\r\n                    />\r\n                ) : null\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import './App.css';\nimport Layout from './container/layout';\n\nfunction App() {\n    const correctAnswer = Array.from(\n        { length: 4 },\n        () => Math.floor(Math.random() * 6) + 1\n    );\n    return (\n        <div className=\"App\">\n            <Layout correctAnswer={correctAnswer} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}